{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\WebstormProjects\\\\6112 Project\\\\6112 Project\\\\FinalProject\\\\src\\\\USAChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"/custom.geo.json\";\nconst StartDate = \"03/24/2020\";\n\nconst USAChart = ({\n  setTooltipContent\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/USA\").then(response => {\n      setData(response.data.filter(o => o.Updated === StartDate));\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projection: \"geoAlbersUsa\",\n      width: 800,\n      height: 600,\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        zoom: 1,\n        children: [\">\", /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onMouseEnter: () => {\n              if (loading) {\n                setTooltipContent('Data is loading');\n              } else {\n                if (data) {\n                  setTooltipContent(`${geo.properties.name}</br>\n                                                        Confirmed - ${data[0].Confirmed}</br>`);\n                } else {\n                  setTooltipContent(`${geo.properties.name}</br>\n                                                        Confirmed - 0</br>`);\n                }\n              }\n            },\n            onMouseLeave: () => {\n              setTooltipContent(\"\");\n            },\n            style: {\n              default: {\n                fill: \"#D6D6DA\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#F53\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#E42\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(USAChart, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n\n_c = USAChart;\nexport default _c2 = /*#__PURE__*/memo(USAChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"USAChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Cyber/WebstormProjects/6112 Project/6112 Project/FinalProject/src/USAChart.js"],"names":["React","memo","useEffect","useState","ZoomableGroup","ComposableMap","Geographies","Geography","Axios","geoUrl","StartDate","USAChart","setTooltipContent","data","setData","loading","setLoading","get","then","response","filter","o","Updated","geographies","map","geo","properties","name","Confirmed","default","fill","outline","hover","pressed","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,mBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAK,kBAAjB;AACA,MAAMC,SAAS,GAAG,YAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACS,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,CAA6CC,QAAD,IAAa;AACrDL,MAAAA,OAAO,CAACK,QAAQ,CAACN,IAAT,CAAcO,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcZ,SAAxC,CAAD,CAAP;AACAM,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,kBAAS,EAAxB;AAA2B,MAAA,UAAU,EAAC,cAAtC;AAAqD,MAAA,KAAK,EAAE,GAA5D;AAAiE,MAAA,MAAM,EAAE,GAAzE;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,CAArB;AAAA,qCACI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEP,MAAxB;AAAA,oBACK,CAAC;AAAEc,YAAAA;AAAF,WAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACf,QAAC,SAAD;AAEI,YAAA,SAAS,EAAEA,GAFf;AAGI,YAAA,YAAY,EAAE,MAAM;AAChB,kBAAGV,OAAH,EAAW;AACPH,gBAAAA,iBAAiB,CAAC,iBAAD,CAAjB;AACH,eAFD,MAEK;AACD,oBAAIC,IAAJ,EAAS;AACLD,kBAAAA,iBAAiB,CAAE,GAAEa,GAAG,CAACC,UAAJ,CAAeC,IAAK;AACzF,sEAAsEd,IAAI,CAAC,CAAD,CAAJ,CAAQe,SAAU,OADvB,CAAjB;AAEH,iBAHD,MAGO;AACHhB,kBAAAA,iBAAiB,CAAE,GAAEa,GAAG,CAACC,UAAJ,CAAeC,IAAK;AACzF,2EADiE,CAAjB;AAEH;AAEJ;AACJ,aAhBL;AAiBI,YAAA,YAAY,EAAE,MAAM;AAChBf,cAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH,aAnBL;AAoBI,YAAA,KAAK,EAAE;AACHiB,cAAAA,OAAO,EAAE;AACLC,gBAAAA,IAAI,EAAE,SADD;AAELC,gBAAAA,OAAO,EAAE;AAFJ,eADN;AAKHC,cAAAA,KAAK,EAAE;AACHF,gBAAAA,IAAI,EAAE,MADH;AAEHC,gBAAAA,OAAO,EAAE;AAFN,eALJ;AASHE,cAAAA,OAAO,EAAE;AACLH,gBAAAA,IAAI,EAAE,MADD;AAELC,gBAAAA,OAAO,EAAE;AAFJ;AATN;AApBX,aACSN,GAAG,CAACS,MADb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiDH,CA7DD;;GAAMvB,Q;;KAAAA,Q;AA+DN,kCAAeV,IAAI,CAACU,QAAD,CAAnB","sourcesContent":["import React, {memo, useEffect, useState} from \"react\";\r\nimport {\r\n    ZoomableGroup,\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography\r\n} from \"react-simple-maps\";\r\nimport Axios from 'axios';\r\n\r\nconst geoUrl =   \"/custom.geo.json\";\r\nconst StartDate = \"03/24/2020\";\r\n\r\nconst USAChart = ({ setTooltipContent }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/USA\").then((response) =>{\r\n            setData(response.data.filter(o => o.Updated === StartDate));\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\" width={800} height={600}>\r\n                <ZoomableGroup zoom={1}>>\r\n                    <Geographies geography={geoUrl}>\r\n                        {({ geographies }) =>\r\n                            geographies.map(geo => (\r\n                                <Geography\r\n                                    key={geo.rsmKey}\r\n                                    geography={geo}\r\n                                    onMouseEnter={() => {\r\n                                        if(loading){\r\n                                            setTooltipContent('Data is loading')\r\n                                        }else{\r\n                                            if (data){\r\n                                                setTooltipContent(`${geo.properties.name}</br>\r\n                                                        Confirmed - ${data[0].Confirmed}</br>`);\r\n                                            } else {\r\n                                                setTooltipContent(`${geo.properties.name}</br>\r\n                                                        Confirmed - 0</br>`);\r\n                                            }\r\n\r\n                                        }\r\n                                    }}\r\n                                    onMouseLeave={() => {\r\n                                        setTooltipContent(\"\");\r\n                                    }}\r\n                                    style={{\r\n                                        default: {\r\n                                            fill: \"#D6D6DA\",\r\n                                            outline: \"none\"\r\n                                        },\r\n                                        hover: {\r\n                                            fill: \"#F53\",\r\n                                            outline: \"none\"\r\n                                        },\r\n                                        pressed: {\r\n                                            fill: \"#E42\",\r\n                                            outline: \"none\"\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Geographies>\r\n                </ZoomableGroup>\r\n            </ComposableMap>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(USAChart);\r\n"]},"metadata":{},"sourceType":"module"}