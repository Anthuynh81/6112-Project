{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\WebstormProjects\\\\6112 Project\\\\6112 Project\\\\FinalProject\\\\src\\\\USAChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Axios from 'axios';\nimport { json } from 'd3-fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst StartDate = \"01/21/2020\";\n\nconst USAChart = ({\n  setTooltipContent\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/USA\").then(response => {\n      setData(response.data.filter(o => o.Updated === StartDate));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      \"data-tip\": \"\",\n      projection: \"geoAlbersUsa\",\n      width: 1000,\n      height: 800,\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        zoom: 1,\n        children: [\">\", /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.filter(geo => geo.properties.name === \"United States of America\").map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            onMouseEnter: () => {\n              const NAME = geo.properties.name;\n              const state = data.find(o => o.AdminRegion1 === NAME);\n              setTooltipContent(`${geo.properties.name}</br>\n                                                        Confirmed - ${state.Confirmed}</br>`);\n            },\n            onMouseLeave: () => {\n              setTooltipContent(\"\");\n            },\n            style: {\n              default: {\n                fill: \"#D6D6DA\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#F53\",\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#E42\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(USAChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = USAChart;\nexport default _c2 = /*#__PURE__*/memo(USAChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"USAChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Cyber/WebstormProjects/6112 Project/6112 Project/FinalProject/src/USAChart.js"],"names":["React","memo","useEffect","useState","ZoomableGroup","ComposableMap","Geographies","Geography","Axios","json","geoUrl","StartDate","USAChart","setTooltipContent","data","setData","get","then","response","filter","o","Updated","geographies","geo","properties","name","map","NAME","state","find","AdminRegion1","Confirmed","default","fill","outline","hover","pressed","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,mBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,UAArB;;;AAEA,MAAMC,MAAM,GAAK,wGAAjB;AACA,MAAMC,SAAS,GAAG,YAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACQ,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,CAA6CC,QAAD,IAAa;AACrDH,MAAAA,OAAO,CAACG,QAAQ,CAACJ,IAAT,CAAcK,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcV,SAAxC,CAAD,CAAP;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,kBAAS,EAAxB;AAA2B,MAAA,UAAU,EAAC,cAAtC;AAAqD,MAAA,KAAK,EAAE,IAA5D;AAAkE,MAAA,MAAM,EAAE,GAA1E;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,CAArB;AAAA,qCACI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAED,MAAxB;AAAA,oBACK,CAAC;AAAEY,YAAAA;AAAF,WAAD,KACGA,WAAW,CAACH,MAAZ,CAAmBI,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeC,IAAf,KAAwB,0BAAlD,EAA8EC,GAA9E,CAAkFH,GAAG,iBACjF,QAAC,SAAD;AAEI,YAAA,SAAS,EAAEA,GAFf;AAGI,YAAA,YAAY,EAAE,MAAM;AAChB,oBAAMI,IAAI,GAAGJ,GAAG,CAACC,UAAJ,CAAeC,IAA5B;AACA,oBAAMG,KAAK,GAAEd,IAAI,CAACe,IAAL,CAAUT,CAAC,IAAIA,CAAC,CAACU,YAAF,KAAmBH,IAAlC,CAAb;AACAd,cAAAA,iBAAiB,CAAE,GAAEU,GAAG,CAACC,UAAJ,CAAeC,IAAK;AACjF,sEAAsEG,KAAK,CAACG,SAAU,OAD7B,CAAjB;AAEH,aARL;AASI,YAAA,YAAY,EAAE,MAAM;AAChBlB,cAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH,aAXL;AAYI,YAAA,KAAK,EAAE;AACHmB,cAAAA,OAAO,EAAE;AACLC,gBAAAA,IAAI,EAAE,SADD;AAELC,gBAAAA,OAAO,EAAE;AAFJ,eADN;AAKHC,cAAAA,KAAK,EAAE;AACHF,gBAAAA,IAAI,EAAE,MADH;AAEHC,gBAAAA,OAAO,EAAE;AAFN,eALJ;AASHE,cAAAA,OAAO,EAAE;AACLH,gBAAAA,IAAI,EAAE,MADD;AAELC,gBAAAA,OAAO,EAAE;AAFJ;AATN;AAZX,aACSX,GAAG,CAACc,MADb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAyCH,CAnDD;;GAAMzB,Q;;KAAAA,Q;AAqDN,kCAAeX,IAAI,CAACW,QAAD,CAAnB","sourcesContent":["import React, {memo, useEffect, useState} from \"react\";\r\nimport {\r\n    ZoomableGroup,\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography\r\n} from \"react-simple-maps\";\r\nimport Axios from 'axios';\r\nimport { json } from 'd3-fetch';\r\n\r\nconst geoUrl =   \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\nconst StartDate = \"01/21/2020\";\r\n\r\nconst USAChart = ({ setTooltipContent }) => {\r\n    const [data, setData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/USA\").then((response) =>{\r\n            setData(response.data.filter(o => o.Updated === StartDate))\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\" width={1000} height={800}>\r\n                <ZoomableGroup zoom={1}>>\r\n                    <Geographies geography={geoUrl}>\r\n                        {({ geographies }) =>\r\n                            geographies.filter(geo => geo.properties.name === \"United States of America\").map(geo => (\r\n                                <Geography\r\n                                    key={geo.rsmKey}\r\n                                    geography={geo}\r\n                                    onMouseEnter={() => {\r\n                                        const NAME = geo.properties.name;\r\n                                        const state= data.find(o => o.AdminRegion1 === NAME);\r\n                                        setTooltipContent(`${geo.properties.name}</br>\r\n                                                        Confirmed - ${state.Confirmed}</br>`);\r\n                                    }}\r\n                                    onMouseLeave={() => {\r\n                                        setTooltipContent(\"\");\r\n                                    }}\r\n                                    style={{\r\n                                        default: {\r\n                                            fill: \"#D6D6DA\",\r\n                                            outline: \"none\"\r\n                                        },\r\n                                        hover: {\r\n                                            fill: \"#F53\",\r\n                                            outline: \"none\"\r\n                                        },\r\n                                        pressed: {\r\n                                            fill: \"#E42\",\r\n                                            outline: \"none\"\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Geographies>\r\n                </ZoomableGroup>\r\n            </ComposableMap>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(USAChart);\r\n"]},"metadata":{},"sourceType":"module"}