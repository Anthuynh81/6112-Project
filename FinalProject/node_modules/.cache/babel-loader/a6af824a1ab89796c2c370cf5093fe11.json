{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\WebstormProjects\\\\6112 Project\\\\6112 Project\\\\FinalProject\\\\src\\\\totalLineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TotalLineChart() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/USA\").then(response => {\n      setData(response.data);\n      console.log(data);\n    });\n  }, []);\n\n  const updatedColumn = (data, n) => data.map(x => x[n]);\n\n  const confirmedColumn = (data, n) => data.map(x => x[n]);\n\n  const data1 = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [{\n      label: 'Dataset of Months',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TotalLineChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = TotalLineChart;\nexport default TotalLineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalLineChart\");","map":{"version":3,"sources":["C:/Users/Cyber/WebstormProjects/6112 Project/6112 Project/FinalProject/src/totalLineChart.js"],"names":["React","useEffect","useState","Line","Axios","TotalLineChart","data","setData","get","then","response","console","log","updatedColumn","n","map","x","confirmedColumn","data1","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACI,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,CAA6CC,QAAD,IAAa;AACrDH,MAAAA,OAAO,CAACG,QAAQ,CAACJ,IAAV,CAAP;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMO,aAAa,GAAG,CAACP,IAAD,EAAOQ,CAAP,KAAaR,IAAI,CAACS,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACF,CAAD,CAAf,CAAnC;;AACA,QAAMG,eAAe,GAAG,CAACX,IAAD,EAAOQ,CAAP,KAAaR,IAAI,CAACS,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACF,CAAD,CAAf,CAArC;;AAEA,QAAMI,KAAK,GAAG;AACVC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADE;AAEVC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,mBADX;AAEIC,MAAAA,IAAI,EAAE,KAFV;AAGIC,MAAAA,WAAW,EAAE,GAHjB;AAIIC,MAAAA,eAAe,EAAE,sBAJrB;AAKIC,MAAAA,WAAW,EAAE,oBALjB;AAMIC,MAAAA,cAAc,EAAE,MANpB;AAOIC,MAAAA,UAAU,EAAE,EAPhB;AAQIC,MAAAA,gBAAgB,EAAE,GARtB;AASIC,MAAAA,eAAe,EAAE,OATrB;AAUIC,MAAAA,gBAAgB,EAAE,oBAVtB;AAWIC,MAAAA,oBAAoB,EAAE,MAX1B;AAYIC,MAAAA,gBAAgB,EAAE,CAZtB;AAaIC,MAAAA,gBAAgB,EAAE,CAbtB;AAcIC,MAAAA,yBAAyB,EAAE,oBAd/B;AAeIC,MAAAA,qBAAqB,EAAE,qBAf3B;AAgBIC,MAAAA,qBAAqB,EAAE,CAhB3B;AAiBIC,MAAAA,WAAW,EAAE,CAjBjB;AAkBIC,MAAAA,cAAc,EAAE,EAlBpB;AAmBIhC,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAnBV,KADM;AAFA,GAAd;AA2BA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEY;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA9CQb,c;;KAAAA,c;AAgDT,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Axios from 'axios';\r\n\r\nfunction TotalLineChart() {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/USA\").then((response) =>{\r\n            setData(response.data)\r\n            console.log(data)\r\n        });\r\n    }, []);\r\n\r\n    const updatedColumn = (data, n) => data.map(x => x[n]);\r\n    const confirmedColumn = (data, n) => data.map(x => x[n]);\r\n\r\n    const data1 = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'Dataset of Months',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: [65, 59, 80, 81, 56, 55, 40]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Line Chart</h2>\r\n            <Line data={data1} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TotalLineChart;"]},"metadata":{},"sourceType":"module"}