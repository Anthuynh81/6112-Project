{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\WebstormProjects\\\\6112 Project\\\\6112 Project\\\\FinalProject\\\\src\\\\Chart2.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chart2 extends Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const width = 1400;\n    const height = 600;\n    const projection = d3.geoAlbersUsa().translate([width / 2, height / 2]).scale([1280]);\n    const path = d3.geoPath().projection(projection);\n    const accessToChartRef = d3.select(this.chartRef.current).append(\"SVG\");\n    accessToChartRef.append(\"g\").attr(\"class\", \"states\").attr(\"class\", \"state-borders\").selectAll(\"path\").enter().append(\"path\").attr(\"d\", path);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n    /*<div>\r\n        <div ref={this.chartRef}></div>\r\n        <div id=\"slidecontainer\">\r\n            <div ref={this.sliderRef}/>\r\n            <h3>{this.state.slider}</h3>\r\n            <span id=\"date\"></span>\r\n        </div>\r\n    </div>*/\n    ;\n  }\n\n}\n\nexport default Chart2;\n/*\r\nconst accessToSliderRef = d3.select(this.sliderRef.current)\r\n    .append(\"input\")\r\n    .attr(\"id\", \"slider\")\r\n    .attr(\"type\", \"range\")\r\n    .attr(\"min\", 0)\r\n    .attr(\"max\", 50)\r\n    .attr(\"step\", 1)\r\n    .attr(\"value\", this.state.slider)\r\n    .attr(\"class\", \"slider\");*/","map":{"version":3,"sources":["C:/Users/Cyber/WebstormProjects/6112 Project/6112 Project/FinalProject/src/Chart2.js"],"names":["React","Component","d3","render","Chart2","constructor","props","chartRef","createRef","componentDidMount","width","height","projection","geoAlbersUsa","translate","scale","path","geoPath","accessToChartRef","select","current","append","attr","selectAll","enter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AACvBI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AACA,SAAKC,QAAL,gBAAgBP,KAAK,CAACQ,SAAN,EAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAI;AACjB,UAAMC,KAAK,GAAG,IAAd;AACA,UAAMC,MAAM,GAAG,GAAf;AAEA,UAAMC,UAAU,GAAGV,EAAE,CAChBW,YADc,GAEdC,SAFc,CAEJ,CAACJ,KAAK,GAAG,CAAT,EAAYC,MAAM,GAAG,CAArB,CAFI,EAGdI,KAHc,CAGR,CAAC,IAAD,CAHQ,CAAnB;AAIA,UAAMC,IAAI,GAAGd,EAAE,CAACe,OAAH,GAAaL,UAAb,CAAwBA,UAAxB,CAAb;AAEA,UAAMM,gBAAgB,GAAGhB,EAAE,CAACiB,MAAH,CAAU,KAAKZ,QAAL,CAAca,OAAxB,EACpBC,MADoB,CACb,KADa,CAAzB;AAGAH,IAAAA,gBAAgB,CACXG,MADL,CACY,GADZ,EAEKC,IAFL,CAEU,OAFV,EAEmB,QAFnB,EAGKA,IAHL,CAGU,OAHV,EAGmB,eAHnB,EAIKC,SAJL,CAIe,MAJf,EAKKC,KALL,GAMKH,MANL,CAMY,MANZ,EAOKC,IAPL,CAOU,GAPV,EAOeN,IAPf;AAQH;;AAMDb,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,GAAG,EAAE,KAAKI;AAAf;AAAA;AAAA;AAAA;AAAA;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AATQ;AAWH;;AA7C0B;;AAiD/B,eAAeH,MAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { render } from '@testing-library/react';\r\n\r\nclass Chart2 extends Component {\r\n        constructor(props){\r\n        super(props)\r\n        this.chartRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount () {\r\n        const width = 1400;\r\n        const height = 600;\r\n\r\n        const projection = d3\r\n            .geoAlbersUsa()\r\n            .translate([width / 2, height / 2])\r\n            .scale([1280]);\r\n        const path = d3.geoPath().projection(projection)\r\n\r\n        const accessToChartRef = d3.select(this.chartRef.current)\r\n            .append(\"SVG\")\r\n\r\n        accessToChartRef\r\n            .append(\"g\")\r\n            .attr(\"class\", \"states\")\r\n            .attr(\"class\", \"state-borders\")\r\n            .selectAll(\"path\")\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"d\", path);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.chartRef}></div>\r\n            /*<div>\r\n                <div ref={this.chartRef}></div>\r\n                <div id=\"slidecontainer\">\r\n                    <div ref={this.sliderRef}/>\r\n                    <h3>{this.state.slider}</h3>\r\n                    <span id=\"date\"></span>\r\n                </div>\r\n            </div>*/\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default Chart2;\r\n\r\n\r\n/*\r\nconst accessToSliderRef = d3.select(this.sliderRef.current)\r\n    .append(\"input\")\r\n    .attr(\"id\", \"slider\")\r\n    .attr(\"type\", \"range\")\r\n    .attr(\"min\", 0)\r\n    .attr(\"max\", 50)\r\n    .attr(\"step\", 1)\r\n    .attr(\"value\", this.state.slider)\r\n    .attr(\"class\", \"slider\");*/\r\n"]},"metadata":{},"sourceType":"module"}