{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\WebstormProjects\\\\6112 Project\\\\6112 Project\\\\FinalProject\\\\src\\\\usaVIS.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nimport { scaleQuantize } from \"d3-scale\";\nimport { json } from \"d3-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://gist.githubusercontent.com/mheydt/29eec003a4c0af362d7a/raw/d27d143bd75626647108fc514d8697e0814bf74b/us-states.json\";\nconst colorScale = scaleQuantize().domain([1, 10]).range([\"#ffedea\", \"#ffcec5\", \"#ffad9f\", \"#ff8a75\", \"#ff5533\", \"#e2492d\", \"#be3d26\", \"#9a311f\", \"#782618\"]);\n\nconst MapChart = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    json(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoAlbersUsa\",\n      width: 700,\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n        zoom: 1,\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            const cur = data.find(s => s.id === geo.id);\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: colorScale(cur ? cur.unemployment_rate : \"#EEE\")\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["C:/Users/Cyber/WebstormProjects/6112 Project/6112 Project/FinalProject/src/usaVIS.js"],"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","ZoomableGroup","scaleQuantize","json","geoUrl","colorScale","domain","range","MapChart","data","setData","then","counties","geographies","map","geo","cur","find","s","id","unemployment_rate","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,aAAhD,QAAqE,mBAArE;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,IAAT,QAAqB,UAArB;;;AAEA,MAAMC,MAAM,GAAG,4HAAf;AAEA,MAAMC,UAAU,GAAGH,aAAa,GAC3BI,MADc,CACP,CAAC,CAAD,EAAI,EAAJ,CADO,EAEdC,KAFc,CAER,CACH,SADG,EAEH,SAFG,EAGH,SAHG,EAIH,SAJG,EAKH,SALG,EAMH,SANG,EAOH,SAPG,EAQH,SARG,EASH,SATG,CAFQ,CAAnB;;AAcA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,IAAI,CAAC,kCAAD,CAAJ,CAAyCQ,IAAzC,CAA8CC,QAAQ,IAAI;AACtDF,MAAAA,OAAO,CAACE,QAAD,CAAP;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,UAAU,EAAC,cAA1B;AAAyC,MAAA,KAAK,EAAE,GAAhD;AAAqD,MAAA,MAAM,EAAE,GAA7D;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,CAArB;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,SAAS,EAAER,MAAxB;AAAA,oBACK,CAAC;AAAES,YAAAA;AAAF,WAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACnB,kBAAMC,GAAG,GAAGP,IAAI,CAACQ,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAA5B,CAAZ;AACA,gCACI,QAAC,SAAD;AAEI,cAAA,SAAS,EAAEJ,GAFf;AAGI,cAAA,IAAI,EAAEV,UAAU,CAACW,GAAG,GAAGA,GAAG,CAACI,iBAAP,GAA2B,MAA/B;AAHpB,eACSL,GAAG,CAACM,MADb;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WATD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAsBH,CA/BD;;GAAMb,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\r\nimport { scaleQuantize } from \"d3-scale\";\r\nimport { json } from \"d3-fetch\";\r\n\r\nconst geoUrl = \"https://gist.githubusercontent.com/mheydt/29eec003a4c0af362d7a/raw/d27d143bd75626647108fc514d8697e0814bf74b/us-states.json\";\r\n\r\nconst colorScale = scaleQuantize()\r\n    .domain([1, 10])\r\n    .range([\r\n        \"#ffedea\",\r\n        \"#ffcec5\",\r\n        \"#ffad9f\",\r\n        \"#ff8a75\",\r\n        \"#ff5533\",\r\n        \"#e2492d\",\r\n        \"#be3d26\",\r\n        \"#9a311f\",\r\n        \"#782618\"\r\n    ]);\r\n\r\nconst MapChart = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        json(\"/unemployment-by-county-2017.csv\").then(counties => {\r\n            setData(counties);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ComposableMap projection=\"geoAlbersUsa\" width={700} height={300}>\r\n                <ZoomableGroup zoom={1}>\r\n                    <Geographies geography={geoUrl}>\r\n                        {({ geographies }) =>\r\n                            geographies.map(geo => {\r\n                                const cur = data.find(s => s.id === geo.id);\r\n                                return (\r\n                                    <Geography\r\n                                        key={geo.rsmKey}\r\n                                        geography={geo}\r\n                                        fill={colorScale(cur ? cur.unemployment_rate : \"#EEE\")}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Geographies>\r\n                </ZoomableGroup>\r\n            </ComposableMap>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}