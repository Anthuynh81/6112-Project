{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\WebstormProjects\\\\6112 Project\\\\6112 Project\\\\FinalProject\\\\src\\\\usaVIS.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantize } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\nconst colorScale = scaleQuantize().domain([1, 10]).range([\"#ffedea\", \"#ffcec5\", \"#ffad9f\", \"#ff8a75\", \"#ff5533\", \"#e2492d\", \"#be3d26\", \"#9a311f\", \"#782618\"]);\n\nconst MapChart = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoAlbersUsa\",\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          const cur = data.find(s => s.id === geo.id);\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: colorScale(cur ? cur.unemployment_rate : \"#EEE\")\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["C:/Users/Cyber/WebstormProjects/6112 Project/6112 Project/FinalProject/src/usaVIS.js"],"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","scaleQuantize","csv","geoUrl","colorScale","domain","range","MapChart","data","setData","then","counties","geographies","map","geo","cur","find","s","id","unemployment_rate","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,GAAT,QAAoB,UAApB;;;AAEA,MAAMC,MAAM,GAAG,2DAAf;AAEA,MAAMC,UAAU,GAAGH,aAAa,GAC3BI,MADc,CACP,CAAC,CAAD,EAAI,EAAJ,CADO,EAEdC,KAFc,CAER,CACH,SADG,EAEH,SAFG,EAGH,SAHG,EAIH,SAJG,EAKH,SALG,EAMH,SANG,EAOH,SAPG,EAQH,SARG,EASH,SATG,CAFQ,CAAnB;;AAcA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAK,IAAAA,GAAG,CAAC,kCAAD,CAAH,CAAwCQ,IAAxC,CAA6CC,QAAQ,IAAI;AACrDF,MAAAA,OAAO,CAACE,QAAD,CAAP;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,UAAU,EAAC,cAA1B;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAER,MAAxB;AAAA,kBACK,CAAC;AAAES,UAAAA;AAAF,SAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACnB,gBAAMC,GAAG,GAAGP,IAAI,CAACQ,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAA5B,CAAZ;AACA,8BACI,QAAC,SAAD;AAEI,YAAA,SAAS,EAAEJ,GAFf;AAGI,YAAA,IAAI,EAAEV,UAAU,CAACW,GAAG,GAAGA,GAAG,CAACI,iBAAP,GAA2B,MAA/B;AAHpB,aACSL,GAAG,CAACM,MADb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SATD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH,CA9BD;;GAAMb,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleQuantize } from \"d3-scale\";\r\nimport { csv } from \"d3-fetch\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\r\n\r\nconst colorScale = scaleQuantize()\r\n    .domain([1, 10])\r\n    .range([\r\n        \"#ffedea\",\r\n        \"#ffcec5\",\r\n        \"#ffad9f\",\r\n        \"#ff8a75\",\r\n        \"#ff5533\",\r\n        \"#e2492d\",\r\n        \"#be3d26\",\r\n        \"#9a311f\",\r\n        \"#782618\"\r\n    ]);\r\n\r\nconst MapChart = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // https://www.bls.gov/lau/\r\n        csv(\"/unemployment-by-county-2017.csv\").then(counties => {\r\n            setData(counties);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ComposableMap projection=\"geoAlbersUsa\">\r\n                <Geographies geography={geoUrl}>\r\n                    {({ geographies }) =>\r\n                        geographies.map(geo => {\r\n                            const cur = data.find(s => s.id === geo.id);\r\n                            return (\r\n                                <Geography\r\n                                    key={geo.rsmKey}\r\n                                    geography={geo}\r\n                                    fill={colorScale(cur ? cur.unemployment_rate : \"#EEE\")}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </Geographies>\r\n            </ComposableMap>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}