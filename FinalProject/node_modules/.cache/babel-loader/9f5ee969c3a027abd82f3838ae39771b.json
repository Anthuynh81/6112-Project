{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\WebstormProjects\\\\6112 Project\\\\6112 Project\\\\FinalProject\\\\src\\\\CountyChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useState } from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://gist.githubusercontent.com/mheydt/29eec003a4c0af362d7a/raw/d27d143bd75626647108fc514d8697e0814bf74b/us-states.json\";\nconst StartDate = \"01/21/2020\";\n\nconst CountyChart = ({\n  setTooltipContent\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/County\").then(response => {\n      setData(response.data.filter(o => o.Updated === StartDate));\n      loadChart();\n    });\n  }, [loading]);\n\n  function loadChart() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        \"data-tip\": \"\",\n        projection: \"geoAlbersUsa\",\n        width: 1000,\n        height: 800,\n        children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n          zoom: 1,\n          children: [\">\", /*#__PURE__*/_jsxDEV(Geographies, {\n            geography: geoUrl,\n            children: ({\n              geographies\n            }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              onMouseEnter: () => {\n                const NAME = geo.properties.name;\n                const state = data.find(o => o.AdminRegion1 === NAME);\n                setTooltipContent(`${geo.properties.name}</br>\n                                                            Confirmed - ${state.Confirmed}</br>`);\n              },\n              onMouseLeave: () => {\n                setTooltipContent(\"\");\n              },\n              style: {\n                default: {\n                  fill: \"#D6D6DA\",\n                  outline: \"none\"\n                },\n                hover: {\n                  fill: \"#F53\",\n                  outline: \"none\"\n                },\n                pressed: {\n                  fill: \"#E42\",\n                  outline: \"none\"\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(CountyChart, \"e2WPURhZO+vgWkProC5DhPL24KA=\");\n\n_c = CountyChart;\nexport default _c2 = /*#__PURE__*/memo(CountyChart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CountyChart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Cyber/WebstormProjects/6112 Project/6112 Project/FinalProject/src/CountyChart.js"],"names":["React","memo","useEffect","useState","ZoomableGroup","ComposableMap","Geographies","Geography","Axios","geoUrl","StartDate","CountyChart","setTooltipContent","data","setData","loading","setLoading","get","then","response","filter","o","Updated","loadChart","geographies","map","geo","NAME","properties","name","state","find","AdminRegion1","Confirmed","default","fill","outline","hover","pressed","rsmKey"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,mBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,4HAAf;AACA,MAAMC,SAAS,GAAG,YAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACS,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAAgDC,QAAD,IAAa;AACxDL,MAAAA,OAAO,CAACK,QAAQ,CAACN,IAAT,CAAcO,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcZ,SAAxC,CAAD,CAAP;AACAa,MAAAA,SAAS;AACR,KAHL;AAIH,GALQ,EAKN,CAACR,OAAD,CALM,CAAT;;AAQA,WAASQ,SAAT,GAAqB;AACjB,wBACI;AAAA,6BACI,QAAC,aAAD;AAAe,oBAAS,EAAxB;AAA2B,QAAA,UAAU,EAAC,cAAtC;AAAqD,QAAA,KAAK,EAAE,IAA5D;AAAkE,QAAA,MAAM,EAAE,GAA1E;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,CAArB;AAAA,uCACI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEd,MAAxB;AAAA,sBACK,CAAC;AAAEe,cAAAA;AAAF,aAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBACf,QAAC,SAAD;AAEI,cAAA,SAAS,EAAEA,GAFf;AAGI,cAAA,YAAY,EAAE,MAAM;AAChB,sBAAMC,IAAI,GAAGD,GAAG,CAACE,UAAJ,CAAeC,IAA5B;AACA,sBAAMC,KAAK,GAAEjB,IAAI,CAACkB,IAAL,CAAUV,CAAC,IAAIA,CAAC,CAACW,YAAF,KAAmBL,IAAlC,CAAb;AACAf,gBAAAA,iBAAiB,CAAE,GAAEc,GAAG,CAACE,UAAJ,CAAeC,IAAK;AACrF,0EAA0EC,KAAK,CAACG,SAAU,OAD7B,CAAjB;AAEH,eARL;AASI,cAAA,YAAY,EAAE,MAAM;AAChBrB,gBAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH,eAXL;AAYI,cAAA,KAAK,EAAE;AACHsB,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,IAAI,EAAE,SADD;AAELC,kBAAAA,OAAO,EAAE;AAFJ,iBADN;AAKHC,gBAAAA,KAAK,EAAE;AACHF,kBAAAA,IAAI,EAAE,MADH;AAEHC,kBAAAA,OAAO,EAAE;AAFN,iBALJ;AASHE,gBAAAA,OAAO,EAAE;AACLH,kBAAAA,IAAI,EAAE,MADD;AAELC,kBAAAA,OAAO,EAAE;AAFJ;AATN;AAZX,eACSV,GAAG,CAACa,MADb;AAAA;AAAA;AAAA;AAAA,oBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAyCH;AACJ,CAxDD;;GAAM5B,W;;KAAAA,W;AA0DN,kCAAeV,IAAI,CAACU,WAAD,CAAnB","sourcesContent":["import React, {memo, useEffect, useState} from \"react\";\r\nimport {\r\n    ZoomableGroup,\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography\r\n} from \"react-simple-maps\";\r\nimport Axios from 'axios';\r\n\r\nconst geoUrl = \"https://gist.githubusercontent.com/mheydt/29eec003a4c0af362d7a/raw/d27d143bd75626647108fc514d8697e0814bf74b/us-states.json\";\r\nconst StartDate = \"01/21/2020\";\r\n\r\nconst CountyChart = ({ setTooltipContent }) => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        Axios.get(\"http://localhost:5000/County\").then((response) =>{\r\n            setData(response.data.filter(o => o.Updated === StartDate))\r\n            loadChart();\r\n            });\r\n    }, [loading]);\r\n\r\n\r\n    function loadChart() {\r\n        return (\r\n            <>\r\n                <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\" width={1000} height={800}>\r\n                    <ZoomableGroup zoom={1}>>\r\n                        <Geographies geography={geoUrl}>\r\n                            {({ geographies }) =>\r\n                                geographies.map(geo => (\r\n                                    <Geography\r\n                                        key={geo.rsmKey}\r\n                                        geography={geo}\r\n                                        onMouseEnter={() => {\r\n                                            const NAME = geo.properties.name;\r\n                                            const state= data.find(o => o.AdminRegion1 === NAME);\r\n                                            setTooltipContent(`${geo.properties.name}</br>\r\n                                                            Confirmed - ${state.Confirmed}</br>`);\r\n                                        }}\r\n                                        onMouseLeave={() => {\r\n                                            setTooltipContent(\"\");\r\n                                        }}\r\n                                        style={{\r\n                                            default: {\r\n                                                fill: \"#D6D6DA\",\r\n                                                outline: \"none\"\r\n                                            },\r\n                                            hover: {\r\n                                                fill: \"#F53\",\r\n                                                outline: \"none\"\r\n                                            },\r\n                                            pressed: {\r\n                                                fill: \"#E42\",\r\n                                                outline: \"none\"\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Geographies>\r\n                    </ZoomableGroup>\r\n                </ComposableMap>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default memo(CountyChart);\r\n"]},"metadata":{},"sourceType":"module"}